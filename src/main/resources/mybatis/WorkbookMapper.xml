<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.co.kr.mapper.WorkbookMapper">

    <!-- insert -->
    <insert id="insertWorkbook" parameterType="com.co.kr.domain.WorkbookDomain">
       	INSERT INTO 
       		jsp.workbook(
	       		id,
	       		title,
	       		category,
	       		owner,
	       		ranking,
	       		createAt,
	       		updateAt)
       	VALUES(
       		#{id},
       		#{title},
       		#{category},
       		#{owner},
       		(SELECT count(*) as c from jsp.workbook as p)+1,
       		NOW(),
       		NOW())
    </insert>
    
    
    <!-- select all -->
    <select id="selectAllWorkbook" parameterType="hashMap" resultType="com.co.kr.domain.WorkbookDomain">
       	SELECT
       		id,
       		title,
       		category,
       		ranking,
       		createAt,
       		updateAt
       	FROM
       		jsp.workbook
       	WHERE
       		owner=#{owner}
    </select>
    <!-- select all sort -->
    <select id="selectAllWorkbookSort" parameterType="hashMap" resultType="com.co.kr.domain.WorkbookDomain">
       	SELECT
       		id,
       		title,
       		category,
       		ranking,
       		createAt,
       		updateAt
       	FROM
       		jsp.workbook
       	WHERE
       		owner=#{owner}
   		<trim prefix="ORDER BY">
            <if test="sortStd == 'ranking'"> ranking </if>
            <if test="sortStd == 'title'"> title </if>
            <if test="sortStd == 'createAt'"> createAt </if>
            <if test="sortStd == 'updateAt'"> updateAt </if>
			   
            <if test="sort == 'ASC'"> ASC </if>
            <if test="sort == 'DESC'"> DESC </if>                       
        </trim>
    </select>
    <!-- select one -->
    <select id="selectOneWorkbook" parameterType="hashMap" resultType="com.co.kr.domain.WorkbookDomain">
       	SELECT
       		id,
       		title,
   			category,
   			ranking,
       		createAt,
       		updateAt
       	FROM
       		jsp.workbook
       	WHERE
       		id=#{id} AND owner=#{owner}
    </select>
    
    <!-- update -->
    <update id="updateWorkbook" parameterType="com.co.kr.domain.WorkbookDomain">
       	UPDATE
       		jsp.workbook
       	SET
       		title=#{title},
       		category=#{category},
       		updateAt=NOW()
       	WHERE
       		id=#{id} AND owner=#{owner}
    </update>
    
    
    <!-- delete -->
    <delete id="deleteWorkbook" parameterType="hashMap">
       	DELETE 
       	FROM
       		jsp.workbook
       	WHERE
       		id=#{id} AND owner=#{owner}
    </delete>
    
    
    
    <!-- problem select by workbook -->
    <select id="selectAllProblem" parameterType="hashMap" resultType="com.co.kr.domain.ProblemDomain">
       	SELECT
       		id,
       		workbook,
       		question,
       		answer,
       		ranking,
       		createAt,
       		updateAt
       	FROM
       		jsp.problem
       	WHERE
       		workbook=#{id}
       	ORDER BY
       		ranking ASC
    </select>
    
    <select id="selectAllProblemSort" parameterType="hashMap" resultType="com.co.kr.domain.ProblemDomain">
       	SELECT
       		id,
       		workbook,
       		question,
       		answer,
       		ranking,
       		createAt,
       		updateAt
       	FROM
       		jsp.problem
       	WHERE
       		workbook=#{id}
   		<trim prefix="ORDER BY">
            <if test="sortStd == 'ranking'"> ranking </if>
            <if test="sortStd == 'question'"> question </if>
            <if test="sortStd == 'answer'"> answer </if>
            <if test="sortStd == 'createAt'"> createAt </if>
            <if test="sortStd == 'updateAt'"> updateAt </if>
			   
            <if test="sort == 'ASC'"> ASC </if>
            <if test="sort == 'DESC'"> DESC </if>                       
        </trim>
    </select>
    <!-- problem select by id -->
    <select id="selectOneProblem" parameterType="hashMap" resultType="com.co.kr.domain.ProblemDomain">
       	SELECT
       		id,
       		workbook,
       		question,
       		answer,
       		ranking,
       		createAt,
       		updateAt
       	FROM
       		jsp.problem
       	WHERE
       		id=#{id}
    </select>
    
    <!-- problem insert -->
    <insert id="insertProblem" parameterType="com.co.kr.domain.ProblemDomain" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO 
       		jsp.problem(
	       		id,
	       		workbook,
	       		question,
	       		answer,
	       		ranking,
	       		createAt,
	       		updateAt)
       	VALUES(
       		#{id},
       		#{workbook},
       		#{question},
       		#{answer},
       		(SELECT count(*) as c from jsp.problem as p)+1,
       		NOW(),
       		NOW())
	</insert>
	
	<!-- problem update -->
    <update id="updateProblem" parameterType="com.co.kr.domain.ProblemDomain">
       	UPDATE
       		jsp.problem
       	SET
       		question=#{question},
       		answer=#{answer},
       		updateAt=NOW()
       	WHERE
       		id=#{id}
    </update>
    <!-- problem delete -->
    <delete id="deleteProblem" parameterType="hashMap">
       	DELETE 
       	FROM
       		jsp.problem
       	WHERE
       		id=#{id}
    </delete>
    
    
    <!-- problem prev select by problem id -->
    <select id="selectPrevProblem" parameterType="hashMap" resultType="com.co.kr.domain.ProblemDomain">
       	SELECT
       		id,
       		workbook,
       		question,
       		answer,
       		ranking
       	FROM
       		jsp.problem
       	WHERE
       		workbook=#{workbookId} AND
       		ranking=#{ranking}-1
    </select>
    <!-- problem next select by problem id -->
    <select id="selectNextProblem" parameterType="hashMap" resultType="com.co.kr.domain.ProblemDomain">
       	SELECT
       		id,
       		workbook,
       		question,
       		answer,
       		ranking
       	FROM
       		jsp.problem
       	WHERE
       		workbook=#{workbookId} AND
       		ranking=#{ranking}+1
    </select>
    <!-- problem total count by workbook id -->
    <select id="getTotalProblemByWorkbookId" parameterType="hashMap" resultType="int">
       	SELECT
       		count(*)
       	FROM
       		jsp.problem
       	GROUP BY
       		workbook
       	HAVING
       		workbook=#{workbookId}
    </select>
    
    
    
	
	<!-- record insert -->
	<insert id="insertRecord" parameterType="com.co.kr.domain.RecordDomain">
		INSERT INTO
			jsp.record(
				id,
				workbook,
				createAt,
				owner)
		VALUES(
			#{id},
			#{workbook},
			NOW(),
			#{owner})
	</insert>
	<!-- record all select -->
	<select id="selectAllRecord" parameterType="hashMap" resultType="com.co.kr.domain.RecordDomain">
		SELECT
			id,
			workbook,
			createAt,
			owner
		FROM
			jsp.record
		WHERE
			owner=#{owner}
		ORDER BY
			id
	</select>
	<!-- record one select -->
	<select id="selectOneRecord" parameterType="hashMap" resultType="com.co.kr.domain.RecordDomain">
		SELECT
			id,
			workbook,
			createAt,
			owner
		FROM
			jsp.record
		WHERE
			owner=#{owner} AND
			id=#{id}
		ORDER BY
			id
	</select>
	<!-- record delete -->
	<delete id="deleteRecord" parameterType="hashMap">
		DELETE 
       	FROM
       		jsp.record
       	WHERE
       		id=#{id}
	</delete>
    
    
    <!-- category -->
    
    
    <!-- category insert -->
	<insert id="insertCategory" parameterType="com.co.kr.domain.CategoryDomain">
		INSERT INTO
			jsp.category(
				id,
				title)
		VALUES(
			#{id},
			#{title});
	</insert>
    
    <!-- category select all -->
	<select id="selectAllCategory" resultType="com.co.kr.domain.CategoryDomain">
		SELECT
			id,
			title
		FROM
			jsp.category
		ORDER BY
			id
	</select>
	
    <!-- category select one by category id -->
	<select id="selectOneCategory" parameterType="hashMap" resultType="com.co.kr.domain.CategoryDomain">
		SELECT
			id,
			title
		FROM
			jsp.category
		WHERE
			id=#{id};
	</select>
	
    <!-- category update -->
	<update id="updateCategory" parameterType="com.co.kr.domain.CategoryDomain">
		UPDATE
			jsp.category
		SET
			title=#{title}
		WHERE
			id=#{id};
	</update>
	
    <!-- category delete -->
	<delete id="deleteCategory" parameterType="hashMap">
		DELETE FROM
			jsp.category
		WHERE
			id=#{id};
	</delete>
    
    
    
    <!-- search problem -->
    <select id="searchProblem" parameterType="hashMap" resultType="com.co.kr.domain.SearchDomain">
		SELECT
			id,
			workbook,
			question,
			answer,
			owner
		FROM 
			jsp.search_problem
		WHERE
			owner=#{owner} AND (
				question LIKE '%${search_query}%' OR
				answer LIKE '%${search_query}%'
			)
		ORDER BY
			id ASC
	</select>
	
	
	
	<!-- home -->
	<select id="selectRandomProblem" parameterType="hashMap" resultType="com.co.kr.domain.ProblemDomain">
		SELECT
			id,
       		workbook,
       		question,
       		answer,
       		ranking
		FROM 
			jsp.problem
		WHERE
			workbook=(SELECT
					workbook
				FROM 
					jsp.search_problem
				WHERE
					owner=#{owner}
				GROUP BY 
				    workbook
				HAVING
					count(*)>0
				ORDER BY
					RAND()
				LIMIT
					1
				)
		ORDER BY
       		ranking ASC
	</select>
	
	
	
	
	<!-- util -->
	
	
	<!-- ranking update -->
    <update id="updateRanking" parameterType="hashMap">
        UPDATE 
			(SELECT
				id,
				ROW_NUMBER() OVER (ORDER BY ranking asc) AS ranking
			FROM
				jsp.problem
			WHERE
				workbook=#{workbookId}
			ORDER BY ranking ASC
			) AS p2,
			jsp.problem AS p1
		SET
			p1.ranking=p2.ranking
		WHERE
			p1.id=p2.id AND
			p1.workbook=#{workbookId};
    </update>
    
    <!-- workbook ranking update -->
    <update id="updateWorkbookRanking" parameterType="hashMap">
        UPDATE 
			(SELECT
				id,
				ROW_NUMBER() OVER (ORDER BY ranking asc) AS ranking
			FROM
				jsp.workbook
			WHERE
				owner=#{owner}
			ORDER BY ranking ASC
			) AS w2,
			jsp.workbook AS w1
		SET
			w1.ranking=w2.ranking
		WHERE
			w1.id=w2.id AND
			w1.owner=#{owner};
    </update>
</mapper>